//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.31 at 08:56:32 PM PDT 
//


package com.jdkoftinoff.jdksavdecc.aemxml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * See IEEE Std 1722.1-2013 Clause 7.2.2
 * 
 * <p>Java class for ConfigurationDescriptor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ConfigurationDescriptor">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="object_name" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}AVDECCString" minOccurs="0"/>
 *         &lt;element name="localized_description" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}LocalizedStringContainer"/>
 *         &lt;element name="audio_units" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}AudioUnitDescriptors" minOccurs="0"/>
 *         &lt;element name="video_units" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}VideoUnitDescriptors" minOccurs="0"/>
 *         &lt;element name="sensor_units" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SensorUnitDescriptors" minOccurs="0"/>
 *         &lt;element name="input_streams" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}StreamDescriptors" minOccurs="0"/>
 *         &lt;element name="output_streams" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}StreamDescriptors" minOccurs="0"/>
 *         &lt;element name="input_jacks" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}JackDescriptors" minOccurs="0"/>
 *         &lt;element name="output_jacks" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}JackDescriptors" minOccurs="0"/>
 *         &lt;element name="avb_interfaces" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}AVBInterfaceDescriptors" minOccurs="0"/>
 *         &lt;element name="clock_sources" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ClockSourceDescriptors" minOccurs="0"/>
 *         &lt;element name="controls" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ControlDescriptors" minOccurs="0"/>
 *         &lt;element name="signal_selectors" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalSelectorDescriptors" minOccurs="0"/>
 *         &lt;element name="mixers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}MixerDescriptors" minOccurs="0"/>
 *         &lt;element name="matrices" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}MatrixDescriptors" minOccurs="0"/>
 *         &lt;element name="locales" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}LocaleDescriptors" minOccurs="0"/>
 *         &lt;element name="splitters" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalSplitterDescriptors" minOccurs="0"/>
 *         &lt;element name="combiners" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalCombinerDescriptors" minOccurs="0"/>
 *         &lt;element name="demultiplexers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalDemultiplexerDescriptors" minOccurs="0"/>
 *         &lt;element name="multiplexers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalMultiplexerDescriptors" minOccurs="0"/>
 *         &lt;element name="transcoders" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalTranscoderDescriptors" minOccurs="0"/>
 *         &lt;element name="memory_objects" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}MemoryObjectDescriptors" minOccurs="0"/>
 *         &lt;element name="clock_domains" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ClockDomainDescriptors" minOccurs="0"/>
 *         &lt;element name="control_blocks" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ControlBlockDescriptors" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="symbol" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConfigurationDescriptor", propOrder = {
    "objectName",
    "localizedDescription",
    "audioUnits",
    "videoUnits",
    "sensorUnits",
    "inputStreams",
    "outputStreams",
    "inputJacks",
    "outputJacks",
    "avbInterfaces",
    "clockSources",
    "controls",
    "signalSelectors",
    "mixers",
    "matrices",
    "locales",
    "splitters",
    "combiners",
    "demultiplexers",
    "multiplexers",
    "transcoders",
    "memoryObjects",
    "clockDomains",
    "controlBlocks"
})
public class ConfigurationDescriptor {

    @XmlElement(name = "object_name")
    protected String objectName;
    @XmlElement(name = "localized_description", required = true)
    protected LocalizedStringContainer localizedDescription;
    @XmlElement(name = "audio_units")
    protected AudioUnitDescriptors audioUnits;
    @XmlElement(name = "video_units")
    protected VideoUnitDescriptors videoUnits;
    @XmlElement(name = "sensor_units")
    protected SensorUnitDescriptors sensorUnits;
    @XmlElement(name = "input_streams")
    protected StreamDescriptors inputStreams;
    @XmlElement(name = "output_streams")
    protected StreamDescriptors outputStreams;
    @XmlElement(name = "input_jacks")
    protected JackDescriptors inputJacks;
    @XmlElement(name = "output_jacks")
    protected JackDescriptors outputJacks;
    @XmlElement(name = "avb_interfaces")
    protected AVBInterfaceDescriptors avbInterfaces;
    @XmlElement(name = "clock_sources")
    protected ClockSourceDescriptors clockSources;
    protected ControlDescriptors controls;
    @XmlElement(name = "signal_selectors")
    protected SignalSelectorDescriptors signalSelectors;
    protected MixerDescriptors mixers;
    protected MatrixDescriptors matrices;
    protected LocaleDescriptors locales;
    protected SignalSplitterDescriptors splitters;
    protected SignalCombinerDescriptors combiners;
    protected SignalDemultiplexerDescriptors demultiplexers;
    protected SignalMultiplexerDescriptors multiplexers;
    protected SignalTranscoderDescriptors transcoders;
    @XmlElement(name = "memory_objects")
    protected MemoryObjectDescriptors memoryObjects;
    @XmlElement(name = "clock_domains")
    protected ClockDomainDescriptors clockDomains;
    @XmlElement(name = "control_blocks")
    protected ControlBlockDescriptors controlBlocks;
    @XmlAttribute(name = "symbol")
    protected String symbol;

    /**
     * Gets the value of the objectName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getObjectName() {
        return objectName;
    }

    /**
     * Sets the value of the objectName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObjectName(String value) {
        this.objectName = value;
    }

    /**
     * Gets the value of the localizedDescription property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedStringContainer }
     *     
     */
    public LocalizedStringContainer getLocalizedDescription() {
        return localizedDescription;
    }

    /**
     * Sets the value of the localizedDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedStringContainer }
     *     
     */
    public void setLocalizedDescription(LocalizedStringContainer value) {
        this.localizedDescription = value;
    }

    /**
     * Gets the value of the audioUnits property.
     * 
     * @return
     *     possible object is
     *     {@link AudioUnitDescriptors }
     *     
     */
    public AudioUnitDescriptors getAudioUnits() {
        return audioUnits;
    }

    /**
     * Sets the value of the audioUnits property.
     * 
     * @param value
     *     allowed object is
     *     {@link AudioUnitDescriptors }
     *     
     */
    public void setAudioUnits(AudioUnitDescriptors value) {
        this.audioUnits = value;
    }

    /**
     * Gets the value of the videoUnits property.
     * 
     * @return
     *     possible object is
     *     {@link VideoUnitDescriptors }
     *     
     */
    public VideoUnitDescriptors getVideoUnits() {
        return videoUnits;
    }

    /**
     * Sets the value of the videoUnits property.
     * 
     * @param value
     *     allowed object is
     *     {@link VideoUnitDescriptors }
     *     
     */
    public void setVideoUnits(VideoUnitDescriptors value) {
        this.videoUnits = value;
    }

    /**
     * Gets the value of the sensorUnits property.
     * 
     * @return
     *     possible object is
     *     {@link SensorUnitDescriptors }
     *     
     */
    public SensorUnitDescriptors getSensorUnits() {
        return sensorUnits;
    }

    /**
     * Sets the value of the sensorUnits property.
     * 
     * @param value
     *     allowed object is
     *     {@link SensorUnitDescriptors }
     *     
     */
    public void setSensorUnits(SensorUnitDescriptors value) {
        this.sensorUnits = value;
    }

    /**
     * Gets the value of the inputStreams property.
     * 
     * @return
     *     possible object is
     *     {@link StreamDescriptors }
     *     
     */
    public StreamDescriptors getInputStreams() {
        return inputStreams;
    }

    /**
     * Sets the value of the inputStreams property.
     * 
     * @param value
     *     allowed object is
     *     {@link StreamDescriptors }
     *     
     */
    public void setInputStreams(StreamDescriptors value) {
        this.inputStreams = value;
    }

    /**
     * Gets the value of the outputStreams property.
     * 
     * @return
     *     possible object is
     *     {@link StreamDescriptors }
     *     
     */
    public StreamDescriptors getOutputStreams() {
        return outputStreams;
    }

    /**
     * Sets the value of the outputStreams property.
     * 
     * @param value
     *     allowed object is
     *     {@link StreamDescriptors }
     *     
     */
    public void setOutputStreams(StreamDescriptors value) {
        this.outputStreams = value;
    }

    /**
     * Gets the value of the inputJacks property.
     * 
     * @return
     *     possible object is
     *     {@link JackDescriptors }
     *     
     */
    public JackDescriptors getInputJacks() {
        return inputJacks;
    }

    /**
     * Sets the value of the inputJacks property.
     * 
     * @param value
     *     allowed object is
     *     {@link JackDescriptors }
     *     
     */
    public void setInputJacks(JackDescriptors value) {
        this.inputJacks = value;
    }

    /**
     * Gets the value of the outputJacks property.
     * 
     * @return
     *     possible object is
     *     {@link JackDescriptors }
     *     
     */
    public JackDescriptors getOutputJacks() {
        return outputJacks;
    }

    /**
     * Sets the value of the outputJacks property.
     * 
     * @param value
     *     allowed object is
     *     {@link JackDescriptors }
     *     
     */
    public void setOutputJacks(JackDescriptors value) {
        this.outputJacks = value;
    }

    /**
     * Gets the value of the avbInterfaces property.
     * 
     * @return
     *     possible object is
     *     {@link AVBInterfaceDescriptors }
     *     
     */
    public AVBInterfaceDescriptors getAvbInterfaces() {
        return avbInterfaces;
    }

    /**
     * Sets the value of the avbInterfaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link AVBInterfaceDescriptors }
     *     
     */
    public void setAvbInterfaces(AVBInterfaceDescriptors value) {
        this.avbInterfaces = value;
    }

    /**
     * Gets the value of the clockSources property.
     * 
     * @return
     *     possible object is
     *     {@link ClockSourceDescriptors }
     *     
     */
    public ClockSourceDescriptors getClockSources() {
        return clockSources;
    }

    /**
     * Sets the value of the clockSources property.
     * 
     * @param value
     *     allowed object is
     *     {@link ClockSourceDescriptors }
     *     
     */
    public void setClockSources(ClockSourceDescriptors value) {
        this.clockSources = value;
    }

    /**
     * Gets the value of the controls property.
     * 
     * @return
     *     possible object is
     *     {@link ControlDescriptors }
     *     
     */
    public ControlDescriptors getControls() {
        return controls;
    }

    /**
     * Sets the value of the controls property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlDescriptors }
     *     
     */
    public void setControls(ControlDescriptors value) {
        this.controls = value;
    }

    /**
     * Gets the value of the signalSelectors property.
     * 
     * @return
     *     possible object is
     *     {@link SignalSelectorDescriptors }
     *     
     */
    public SignalSelectorDescriptors getSignalSelectors() {
        return signalSelectors;
    }

    /**
     * Sets the value of the signalSelectors property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalSelectorDescriptors }
     *     
     */
    public void setSignalSelectors(SignalSelectorDescriptors value) {
        this.signalSelectors = value;
    }

    /**
     * Gets the value of the mixers property.
     * 
     * @return
     *     possible object is
     *     {@link MixerDescriptors }
     *     
     */
    public MixerDescriptors getMixers() {
        return mixers;
    }

    /**
     * Sets the value of the mixers property.
     * 
     * @param value
     *     allowed object is
     *     {@link MixerDescriptors }
     *     
     */
    public void setMixers(MixerDescriptors value) {
        this.mixers = value;
    }

    /**
     * Gets the value of the matrices property.
     * 
     * @return
     *     possible object is
     *     {@link MatrixDescriptors }
     *     
     */
    public MatrixDescriptors getMatrices() {
        return matrices;
    }

    /**
     * Sets the value of the matrices property.
     * 
     * @param value
     *     allowed object is
     *     {@link MatrixDescriptors }
     *     
     */
    public void setMatrices(MatrixDescriptors value) {
        this.matrices = value;
    }

    /**
     * Gets the value of the locales property.
     * 
     * @return
     *     possible object is
     *     {@link LocaleDescriptors }
     *     
     */
    public LocaleDescriptors getLocales() {
        return locales;
    }

    /**
     * Sets the value of the locales property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocaleDescriptors }
     *     
     */
    public void setLocales(LocaleDescriptors value) {
        this.locales = value;
    }

    /**
     * Gets the value of the splitters property.
     * 
     * @return
     *     possible object is
     *     {@link SignalSplitterDescriptors }
     *     
     */
    public SignalSplitterDescriptors getSplitters() {
        return splitters;
    }

    /**
     * Sets the value of the splitters property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalSplitterDescriptors }
     *     
     */
    public void setSplitters(SignalSplitterDescriptors value) {
        this.splitters = value;
    }

    /**
     * Gets the value of the combiners property.
     * 
     * @return
     *     possible object is
     *     {@link SignalCombinerDescriptors }
     *     
     */
    public SignalCombinerDescriptors getCombiners() {
        return combiners;
    }

    /**
     * Sets the value of the combiners property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalCombinerDescriptors }
     *     
     */
    public void setCombiners(SignalCombinerDescriptors value) {
        this.combiners = value;
    }

    /**
     * Gets the value of the demultiplexers property.
     * 
     * @return
     *     possible object is
     *     {@link SignalDemultiplexerDescriptors }
     *     
     */
    public SignalDemultiplexerDescriptors getDemultiplexers() {
        return demultiplexers;
    }

    /**
     * Sets the value of the demultiplexers property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalDemultiplexerDescriptors }
     *     
     */
    public void setDemultiplexers(SignalDemultiplexerDescriptors value) {
        this.demultiplexers = value;
    }

    /**
     * Gets the value of the multiplexers property.
     * 
     * @return
     *     possible object is
     *     {@link SignalMultiplexerDescriptors }
     *     
     */
    public SignalMultiplexerDescriptors getMultiplexers() {
        return multiplexers;
    }

    /**
     * Sets the value of the multiplexers property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalMultiplexerDescriptors }
     *     
     */
    public void setMultiplexers(SignalMultiplexerDescriptors value) {
        this.multiplexers = value;
    }

    /**
     * Gets the value of the transcoders property.
     * 
     * @return
     *     possible object is
     *     {@link SignalTranscoderDescriptors }
     *     
     */
    public SignalTranscoderDescriptors getTranscoders() {
        return transcoders;
    }

    /**
     * Sets the value of the transcoders property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalTranscoderDescriptors }
     *     
     */
    public void setTranscoders(SignalTranscoderDescriptors value) {
        this.transcoders = value;
    }

    /**
     * Gets the value of the memoryObjects property.
     * 
     * @return
     *     possible object is
     *     {@link MemoryObjectDescriptors }
     *     
     */
    public MemoryObjectDescriptors getMemoryObjects() {
        return memoryObjects;
    }

    /**
     * Sets the value of the memoryObjects property.
     * 
     * @param value
     *     allowed object is
     *     {@link MemoryObjectDescriptors }
     *     
     */
    public void setMemoryObjects(MemoryObjectDescriptors value) {
        this.memoryObjects = value;
    }

    /**
     * Gets the value of the clockDomains property.
     * 
     * @return
     *     possible object is
     *     {@link ClockDomainDescriptors }
     *     
     */
    public ClockDomainDescriptors getClockDomains() {
        return clockDomains;
    }

    /**
     * Sets the value of the clockDomains property.
     * 
     * @param value
     *     allowed object is
     *     {@link ClockDomainDescriptors }
     *     
     */
    public void setClockDomains(ClockDomainDescriptors value) {
        this.clockDomains = value;
    }

    /**
     * Gets the value of the controlBlocks property.
     * 
     * @return
     *     possible object is
     *     {@link ControlBlockDescriptors }
     *     
     */
    public ControlBlockDescriptors getControlBlocks() {
        return controlBlocks;
    }

    /**
     * Sets the value of the controlBlocks property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlBlockDescriptors }
     *     
     */
    public void setControlBlocks(ControlBlockDescriptors value) {
        this.controlBlocks = value;
    }

    /**
     * Gets the value of the symbol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSymbol() {
        return symbol;
    }

    /**
     * Sets the value of the symbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSymbol(String value) {
        this.symbol = value;
    }

}
