//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.31 at 08:56:32 PM PDT 
//


package com.jdkoftinoff.jdksavdecc.aemxml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * See IEEE Std 1722.1-2013 Clause 7.2.5
 * 
 * <p>Java class for SensorUnitDescriptor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SensorUnitDescriptor">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="object_name" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}AVDECCString" minOccurs="0"/>
 *         &lt;element name="localized_description" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}LocalizedStringContainer"/>
 *         &lt;element name="clock_domain_index" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}DescriptorIndex"/>
 *         &lt;element name="input_stream_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SensorStreamPortDescriptors" minOccurs="0"/>
 *         &lt;element name="output_stream_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SensorStreamPortDescriptors" minOccurs="0"/>
 *         &lt;element name="input_external_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ExternalPortDescriptors" minOccurs="0"/>
 *         &lt;element name="output_external_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ExternalPortDescriptors" minOccurs="0"/>
 *         &lt;element name="input_internal_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}InternalPortDescriptors" minOccurs="0"/>
 *         &lt;element name="output_internal_ports" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}InternalPortDescriptors" minOccurs="0"/>
 *         &lt;element name="controls" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ControlDescriptors" minOccurs="0"/>
 *         &lt;element name="signal_selectors" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalSelectorDescriptors" minOccurs="0"/>
 *         &lt;element name="mixers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}MixerDescriptors" minOccurs="0"/>
 *         &lt;element name="matrices" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}MatrixDescriptors" minOccurs="0"/>
 *         &lt;element name="splitters" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalSplitterDescriptors" minOccurs="0"/>
 *         &lt;element name="combiners" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalCombinerDescriptors" minOccurs="0"/>
 *         &lt;element name="demultiplexers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalDemultiplexerDescriptors" minOccurs="0"/>
 *         &lt;element name="multiplexers" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalMultiplexerDescriptors" minOccurs="0"/>
 *         &lt;element name="transcoders" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}SignalTranscoderDescriptors" minOccurs="0"/>
 *         &lt;element name="control_blocks" type="{http://grouper.ieee.org/groups/1722/1/contributions/xml}ControlBlockDescriptors" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="symbol" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SensorUnitDescriptor", propOrder = {
    "objectName",
    "localizedDescription",
    "clockDomainIndex",
    "inputStreamPorts",
    "outputStreamPorts",
    "inputExternalPorts",
    "outputExternalPorts",
    "inputInternalPorts",
    "outputInternalPorts",
    "controls",
    "signalSelectors",
    "mixers",
    "matrices",
    "splitters",
    "combiners",
    "demultiplexers",
    "multiplexers",
    "transcoders",
    "controlBlocks"
})
public class SensorUnitDescriptor {

    @XmlElement(name = "object_name")
    protected String objectName;
    @XmlElement(name = "localized_description", required = true)
    protected LocalizedStringContainer localizedDescription;
    @XmlElement(name = "clock_domain_index", required = true)
    protected String clockDomainIndex;
    @XmlElement(name = "input_stream_ports")
    protected SensorStreamPortDescriptors inputStreamPorts;
    @XmlElement(name = "output_stream_ports")
    protected SensorStreamPortDescriptors outputStreamPorts;
    @XmlElement(name = "input_external_ports")
    protected ExternalPortDescriptors inputExternalPorts;
    @XmlElement(name = "output_external_ports")
    protected ExternalPortDescriptors outputExternalPorts;
    @XmlElement(name = "input_internal_ports")
    protected InternalPortDescriptors inputInternalPorts;
    @XmlElement(name = "output_internal_ports")
    protected InternalPortDescriptors outputInternalPorts;
    protected ControlDescriptors controls;
    @XmlElement(name = "signal_selectors")
    protected SignalSelectorDescriptors signalSelectors;
    protected MixerDescriptors mixers;
    protected MatrixDescriptors matrices;
    protected SignalSplitterDescriptors splitters;
    protected SignalCombinerDescriptors combiners;
    protected SignalDemultiplexerDescriptors demultiplexers;
    protected SignalMultiplexerDescriptors multiplexers;
    protected SignalTranscoderDescriptors transcoders;
    @XmlElement(name = "control_blocks")
    protected ControlBlockDescriptors controlBlocks;
    @XmlAttribute(name = "symbol")
    protected String symbol;

    /**
     * Gets the value of the objectName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getObjectName() {
        return objectName;
    }

    /**
     * Sets the value of the objectName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObjectName(String value) {
        this.objectName = value;
    }

    /**
     * Gets the value of the localizedDescription property.
     * 
     * @return
     *     possible object is
     *     {@link LocalizedStringContainer }
     *     
     */
    public LocalizedStringContainer getLocalizedDescription() {
        return localizedDescription;
    }

    /**
     * Sets the value of the localizedDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalizedStringContainer }
     *     
     */
    public void setLocalizedDescription(LocalizedStringContainer value) {
        this.localizedDescription = value;
    }

    /**
     * Gets the value of the clockDomainIndex property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClockDomainIndex() {
        return clockDomainIndex;
    }

    /**
     * Sets the value of the clockDomainIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClockDomainIndex(String value) {
        this.clockDomainIndex = value;
    }

    /**
     * Gets the value of the inputStreamPorts property.
     * 
     * @return
     *     possible object is
     *     {@link SensorStreamPortDescriptors }
     *     
     */
    public SensorStreamPortDescriptors getInputStreamPorts() {
        return inputStreamPorts;
    }

    /**
     * Sets the value of the inputStreamPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link SensorStreamPortDescriptors }
     *     
     */
    public void setInputStreamPorts(SensorStreamPortDescriptors value) {
        this.inputStreamPorts = value;
    }

    /**
     * Gets the value of the outputStreamPorts property.
     * 
     * @return
     *     possible object is
     *     {@link SensorStreamPortDescriptors }
     *     
     */
    public SensorStreamPortDescriptors getOutputStreamPorts() {
        return outputStreamPorts;
    }

    /**
     * Sets the value of the outputStreamPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link SensorStreamPortDescriptors }
     *     
     */
    public void setOutputStreamPorts(SensorStreamPortDescriptors value) {
        this.outputStreamPorts = value;
    }

    /**
     * Gets the value of the inputExternalPorts property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalPortDescriptors }
     *     
     */
    public ExternalPortDescriptors getInputExternalPorts() {
        return inputExternalPorts;
    }

    /**
     * Sets the value of the inputExternalPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalPortDescriptors }
     *     
     */
    public void setInputExternalPorts(ExternalPortDescriptors value) {
        this.inputExternalPorts = value;
    }

    /**
     * Gets the value of the outputExternalPorts property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalPortDescriptors }
     *     
     */
    public ExternalPortDescriptors getOutputExternalPorts() {
        return outputExternalPorts;
    }

    /**
     * Sets the value of the outputExternalPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalPortDescriptors }
     *     
     */
    public void setOutputExternalPorts(ExternalPortDescriptors value) {
        this.outputExternalPorts = value;
    }

    /**
     * Gets the value of the inputInternalPorts property.
     * 
     * @return
     *     possible object is
     *     {@link InternalPortDescriptors }
     *     
     */
    public InternalPortDescriptors getInputInternalPorts() {
        return inputInternalPorts;
    }

    /**
     * Sets the value of the inputInternalPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternalPortDescriptors }
     *     
     */
    public void setInputInternalPorts(InternalPortDescriptors value) {
        this.inputInternalPorts = value;
    }

    /**
     * Gets the value of the outputInternalPorts property.
     * 
     * @return
     *     possible object is
     *     {@link InternalPortDescriptors }
     *     
     */
    public InternalPortDescriptors getOutputInternalPorts() {
        return outputInternalPorts;
    }

    /**
     * Sets the value of the outputInternalPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternalPortDescriptors }
     *     
     */
    public void setOutputInternalPorts(InternalPortDescriptors value) {
        this.outputInternalPorts = value;
    }

    /**
     * Gets the value of the controls property.
     * 
     * @return
     *     possible object is
     *     {@link ControlDescriptors }
     *     
     */
    public ControlDescriptors getControls() {
        return controls;
    }

    /**
     * Sets the value of the controls property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlDescriptors }
     *     
     */
    public void setControls(ControlDescriptors value) {
        this.controls = value;
    }

    /**
     * Gets the value of the signalSelectors property.
     * 
     * @return
     *     possible object is
     *     {@link SignalSelectorDescriptors }
     *     
     */
    public SignalSelectorDescriptors getSignalSelectors() {
        return signalSelectors;
    }

    /**
     * Sets the value of the signalSelectors property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalSelectorDescriptors }
     *     
     */
    public void setSignalSelectors(SignalSelectorDescriptors value) {
        this.signalSelectors = value;
    }

    /**
     * Gets the value of the mixers property.
     * 
     * @return
     *     possible object is
     *     {@link MixerDescriptors }
     *     
     */
    public MixerDescriptors getMixers() {
        return mixers;
    }

    /**
     * Sets the value of the mixers property.
     * 
     * @param value
     *     allowed object is
     *     {@link MixerDescriptors }
     *     
     */
    public void setMixers(MixerDescriptors value) {
        this.mixers = value;
    }

    /**
     * Gets the value of the matrices property.
     * 
     * @return
     *     possible object is
     *     {@link MatrixDescriptors }
     *     
     */
    public MatrixDescriptors getMatrices() {
        return matrices;
    }

    /**
     * Sets the value of the matrices property.
     * 
     * @param value
     *     allowed object is
     *     {@link MatrixDescriptors }
     *     
     */
    public void setMatrices(MatrixDescriptors value) {
        this.matrices = value;
    }

    /**
     * Gets the value of the splitters property.
     * 
     * @return
     *     possible object is
     *     {@link SignalSplitterDescriptors }
     *     
     */
    public SignalSplitterDescriptors getSplitters() {
        return splitters;
    }

    /**
     * Sets the value of the splitters property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalSplitterDescriptors }
     *     
     */
    public void setSplitters(SignalSplitterDescriptors value) {
        this.splitters = value;
    }

    /**
     * Gets the value of the combiners property.
     * 
     * @return
     *     possible object is
     *     {@link SignalCombinerDescriptors }
     *     
     */
    public SignalCombinerDescriptors getCombiners() {
        return combiners;
    }

    /**
     * Sets the value of the combiners property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalCombinerDescriptors }
     *     
     */
    public void setCombiners(SignalCombinerDescriptors value) {
        this.combiners = value;
    }

    /**
     * Gets the value of the demultiplexers property.
     * 
     * @return
     *     possible object is
     *     {@link SignalDemultiplexerDescriptors }
     *     
     */
    public SignalDemultiplexerDescriptors getDemultiplexers() {
        return demultiplexers;
    }

    /**
     * Sets the value of the demultiplexers property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalDemultiplexerDescriptors }
     *     
     */
    public void setDemultiplexers(SignalDemultiplexerDescriptors value) {
        this.demultiplexers = value;
    }

    /**
     * Gets the value of the multiplexers property.
     * 
     * @return
     *     possible object is
     *     {@link SignalMultiplexerDescriptors }
     *     
     */
    public SignalMultiplexerDescriptors getMultiplexers() {
        return multiplexers;
    }

    /**
     * Sets the value of the multiplexers property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalMultiplexerDescriptors }
     *     
     */
    public void setMultiplexers(SignalMultiplexerDescriptors value) {
        this.multiplexers = value;
    }

    /**
     * Gets the value of the transcoders property.
     * 
     * @return
     *     possible object is
     *     {@link SignalTranscoderDescriptors }
     *     
     */
    public SignalTranscoderDescriptors getTranscoders() {
        return transcoders;
    }

    /**
     * Sets the value of the transcoders property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalTranscoderDescriptors }
     *     
     */
    public void setTranscoders(SignalTranscoderDescriptors value) {
        this.transcoders = value;
    }

    /**
     * Gets the value of the controlBlocks property.
     * 
     * @return
     *     possible object is
     *     {@link ControlBlockDescriptors }
     *     
     */
    public ControlBlockDescriptors getControlBlocks() {
        return controlBlocks;
    }

    /**
     * Sets the value of the controlBlocks property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlBlockDescriptors }
     *     
     */
    public void setControlBlocks(ControlBlockDescriptors value) {
        this.controlBlocks = value;
    }

    /**
     * Gets the value of the symbol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSymbol() {
        return symbol;
    }

    /**
     * Sets the value of the symbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSymbol(String value) {
        this.symbol = value;
    }

}
